/* ============================================================================
   AI Compliance Chat Widget â€“ embeddableâ€‚v1.4.1
   ----------------------------------------------------------------------------
   â€¢ Drop-in JS file; no external deps.
   â€¢ Works with either /chat (JSON) or /chat/stream (SSE).
   â€¢ Dark-mode aware, keyboard-accessible, responsive.
   â€¢ Context continuity via localStorage ("aiw-prevID").
   â€¢ Pure JS (ES2017+) â€” runs everywhere.
   All inline comments are in English, per request.
============================================================================ */
(() => {
  'use strict';

  /* â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ 1. CONFIG â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ */
  const el         = document.currentScript;
  const BACKEND    = (el.dataset.backend || '').replace(/\/$/, '');
  const WIDGET_KEY = el.dataset.key || '';
  const USE_STREAM = el.dataset.stream !== 'false';          // default = true

  if (!BACKEND || !WIDGET_KEY) {
    console.error('[aiw] backend URL and data-key are required');
    return;
  }

  const COMPACT_W = 340, EXPANDED_W = 600, COMPACT_H = 420;
  let   isExpanded = false, chatBusy = false;
  let   prevID = localStorage.getItem('aiw-prevID') || null;

  /* â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ 2. STYLES â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ */
  const css = /* css */`
/* auto-generated by chat-widget.js v1.4.1 */
:root{
  /* Design tokens */
  --aiw-primary:#2563eb;
  --aiw-primary-light:#3b82f6;
  --aiw-primary-dark:#1e40af;
  --aiw-text-on-primary:#ffffff;
  --aiw-user-bg:#f3f4f6;
  --aiw-user-text:#111827;
  --aiw-assistant-bg:#dcfce7;
  --aiw-assistant-text:#065f46;
  --aiw-radius:12px;
  --aiw-shadow:0 4px 12px rgba(0,0,0,.12);
  --aiw-font:system-ui,-apple-system,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif;
}

@media (prefers-color-scheme: dark){
  :root{
    --aiw-primary:#3b82f6;
    --aiw-primary-light:#60a5fa;
    --aiw-primary-dark:#1d4ed8;
    --aiw-user-bg:#1f2937;
    --aiw-user-text:#e5e7eb;
    --aiw-assistant-bg:#064e3b;
    --aiw-assistant-text:#d1fae5;
  }
}

/* Launcher button */
.aiw-launcher{
  position:fixed; bottom:24px; right:24px;
  display:flex; align-items:center; justify-content:center;
  width:56px; height:56px;
  background:var(--aiw-primary); color:var(--aiw-text-on-primary);
  border:none; border-radius:50%;
  font-size:24px; cursor:pointer;
  box-shadow:var(--aiw-shadow);
  animation:aiwPulse 2.8s ease-in-out infinite;
  z-index:100000;
}
.aiw-launcher:focus-visible{outline:3px solid var(--aiw-primary-light);}

/* Widget container */
.aiw-box{
  position:fixed; bottom:90px; right:24px;
  display:none; flex-direction:column;
  width:${COMPACT_W}px; height:${COMPACT_H}px;
  background:#fff; border:1px solid #e5e7eb;
  border-radius:var(--aiw-radius); box-shadow:var(--aiw-shadow);
  font-family:var(--aiw-font); overflow:hidden;
  transition:width .25s, height .25s;
  scroll-behavior:smooth;
}
@media(max-width:480px){
  .aiw-box{right:12px; width:calc(100vw - 24px);}
}

/* Header */
.aiw-box header{
  display:flex; align-items:center; gap:10px;
  background:var(--aiw-primary); color:var(--aiw-text-on-primary);
  padding:.75rem 1rem; font-size:15px; font-weight:600;
}
.aiw-box header img{width:28px;height:28px;border-radius:50%;background:#fff;padding:2px}
.aiw-box header .toggle{
  margin-left:auto; background:none; border:none; color:inherit;
  font-size:1.1rem; cursor:pointer; line-height:1;
  transition:transform .15s;
}
.aiw-box header .toggle:hover{transform:scale(1.15);}

/* Message area */
.aiw-box .messages{
  flex:1; min-height:0; padding:1rem;
  display:flex; flex-direction:column; gap:.75rem; overflow-y:auto;
}

/* Footer */
.aiw-box footer{
  display:flex; gap:.5rem; padding:.75rem 1rem;
  border-top:1px solid #f3f4f6;
}
.aiw-box textarea{
  flex:1; font:inherit; font-size:14px;
  padding:.5rem; border:1px solid #d1d5db; border-radius:8px; resize:vertical;
}
.aiw-box textarea:focus-visible{outline:2px solid var(--aiw-primary-light);}
.aiw-box button.send{
  background:var(--aiw-primary); color:var(--aiw-text-on-primary);
  border:none; padding:.5rem 1rem; border-radius:8px; cursor:pointer;
  transition:background .2s;
}
.aiw-box button.send:hover{background:var(--aiw-primary-dark);}

/* Messages */
.aiw-box .message{
  max-width:90%; padding:.75rem; border-radius:10px;
  line-height:1.45; font-size:14px;
}
.aiw-box .message.user{
  background:var(--aiw-user-bg); color:var(--aiw-user-text); margin-left:auto;
}
.aiw-box .message.assistant{
  background:var(--aiw-assistant-bg); color:var(--aiw-assistant-text); margin-right:auto;
}
.aiw-box .message.legal-note{
  background:var(--aiw-user-bg); color:#6b7280;
  margin-right:auto; font-size:13px;
}

/* Typing indicator */
.aiw-box .message.assistant.typing{opacity:.8;}
.aiw-box .typing::after{content:".";animation:aiwDots 1.2s steps(3,end) infinite}
@keyframes aiwDots{0%{content:"."}33%{content:".."}66%{content:"..."}}

/* Quick replies */
.aiw-box .quick-replies{
  display:flex; flex-wrap:wrap; gap:.5rem; margin-top:.5rem;
}
.aiw-box .quick-replies button{
  background:#eef2ff; color:#1e3a8a;
  border:none; border-radius:6px;
  padding:.4rem .75rem; font-size:.85rem; cursor:pointer;
  transition:background .2s;
}
.aiw-box .quick-replies button:hover{background:#e0e7ff;}

/* CTA button */
.aiw-box .getInTouch{
  background:var(--aiw-primary); color:var(--aiw-text-on-primary);
  border:none; padding:.5rem 1rem; border-radius:8px;
  font-size:.85rem; cursor:pointer; transition:background .2s;
}
.aiw-box .getInTouch:hover{background:var(--aiw-primary-dark);}

/* Animations */
@keyframes aiwPulse{
  0%  {transform:rotate(0) scale(1);   box-shadow:0 0 0 rgba(37,99,235,.4);}
  50% {transform:rotate(-5deg) scale(1.08); box-shadow:0 0 12px rgba(37,99,235,.6);}
  100%{transform:rotate(0) scale(1);   box-shadow:0 0 0 rgba(37,99,235,.4);}
}
`;
  document.head.appendChild(Object.assign(document.createElement('style'), {textContent: css}));

  /* â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ 3. DOM â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ */
  const launcher = Object.assign(document.createElement('button'), {
    className: 'aiw-launcher',
    title: 'Chat',
    'aria-label': 'Open chat widget',
    textContent: 'ðŸ’¬'
  });
  document.body.appendChild(launcher);

  const box = Object.assign(document.createElement('div'), {className:'aiw-box',innerHTML:`
<header>
  <img src="https://img.icons8.com/fluency/48/artificial-intelligence.png" alt="">
  Chat with Brita AI
  <button title="Expand" class="toggle">â›¶</button>
</header>
<div class="messages">
  <div class="message">
    How can I assist you with telecommunications compliance?
    <div class="quick-replies">
      <button>STIR/SHAKEN</button>
      <button>FCC 911 Rules</button>
      <button>CPNI</button>
    </div>
  </div>
  <div class="message legal-note">
    This chat provides general information only and is not legal advice.<br>
    Would you like to speak with Brita for legal advice about this?<br><br>
    <button class="getInTouch">Get in Touch</button>
  </div>
</div>
<footer>
  <textarea rows="2" placeholder="Type your messageâ€¦"></textarea>
  <button class="send">âž¤</button>
</footer>`});
  document.body.appendChild(box);

  const toggleBtn = box.querySelector('header .toggle');
  const messages  = box.querySelector('.messages');
  const textarea  = box.querySelector('textarea');
  const sendBtn   = box.querySelector('.send');

  /* â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ 4. HELPERS â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ */
  const sanitize = s => s.replace(/<script[\s\S]*?>[\s\S]*?<\/script>/gi,'');
  function addMsg(text, cls){
    /* cls = 'assistant' | 'user' */
    const div = Object.assign(document.createElement('div'),
      {className:`message ${cls}`,innerHTML:sanitize(text)});
    messages.appendChild(div);
    messages.scrollTop = messages.scrollHeight;
    return div;
  }
  const startDots = el => el.classList.add('typing');
  const stopDots  = el => el.classList.remove('typing');

  /* â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ 5. UI EVENTS â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ */
  function setCompact (){ Object.assign(box.style,{width:`${COMPACT_W}px`,height:`${COMPACT_H}px`}); isExpanded=false; }
  function setExpanded(){ Object.assign(box.style,{width:`${EXPANDED_W}px`,height:'80vh'});         isExpanded=true;  }

  toggleBtn.addEventListener('click', () => isExpanded ? setCompact() : setExpanded());

  launcher.addEventListener('click', () => {
    const open = box.style.display === 'flex';
    box.style.display = open ? 'none' : 'flex';
    if (!open) setCompact();
    textarea.focus();
  });

  /* Quick-reply buttons & CTA */
  messages.addEventListener('click', e=>{
    if(e.target.closest('.quick-replies')){
      textarea.value = e.target.textContent.trim();
      sendMessage();
    }
    if(e.target.classList.contains('getInTouch')){
      window.location.href = 'mailto:contact@telecom-ai.com';
    }
  });

  sendBtn.addEventListener('click', sendMessage);
  textarea.addEventListener('keydown', e=>{
    if(e.key==='Enter' && !e.shiftKey){ e.preventDefault(); sendMessage(); }
  });

  /* â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ 6. CORE SEND LOGIC â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ */
  async function sendMessage(){
    const msg = textarea.value.trim(); if(!msg || chatBusy) return;
    chatBusy=true; textarea.value='';

    addMsg(msg,'user');
    const aiDiv = addMsg('', 'assistant'); startDots(aiDiv);

    const headers = {'Content-Type':'application/json','X-Widget-Key':WIDGET_KEY};
    const push = chunk => {
      if(aiDiv.classList.contains('typing')){ stopDots(aiDiv); aiDiv.innerHTML=''; }
      aiDiv.innerHTML += sanitize(chunk);
      messages.scrollTop = messages.scrollHeight;
    };

    try{
      if(USE_STREAM){
        const res = await fetch(`${BACKEND}/chat/stream`,{
          method:'POST',mode:'cors',headers,
          body:JSON.stringify({message:msg,previous_response_id:prevID})
        });
        if(!res.ok||!res.body) throw new Error('Network error');

        const rdr=res.body.getReader(), dec=new TextDecoder(); let buf='';
        while(true){
          const {value,done}=await rdr.read(); if(done) break;
          buf+=dec.decode(value,{stream:true});
          const evts=buf.split('\n\n'); buf=evts.pop();
          for(const ev of evts){
            if(ev.startsWith('event: done')){ rdr.cancel(); break; }
            if(ev.startsWith('event: meta')){
              const data = JSON.parse(ev.split('\n')[1].slice(6));
              prevID = data.prev_id; localStorage.setItem('aiw-prevID',prevID);
              continue;
            }
            const chunk = ev.split('\n').filter(l=>l.startsWith('data:')).map(l=>l.slice(6)).join('\n');
            if(chunk) push(chunk);
          }
        }
      }else{
        const res = await fetch(`${BACKEND}/chat`,{
          method:'POST',mode:'cors',headers,
          body:JSON.stringify({message:msg,previous_response_id:prevID})
        });
        const j = await res.json(); stopDots(aiDiv);
        aiDiv.innerHTML = sanitize(j.response || j.error || 'No response');
        if(j.prev_id){ prevID=j.prev_id; localStorage.setItem('aiw-prevID',prevID); }
      }
    }catch(err){
      console.error('[aiw]',err); stopDots(aiDiv);
      aiDiv.textContent='Error contacting server';
    }finally{
      chatBusy=false; aiDiv.classList.remove('typing'); textarea.focus();
    }
  }
})();
